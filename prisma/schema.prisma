// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  price       Int
  quantity    Int
  currency    Currency @relation(fields: [currencyId], references: [id])
  currencyId  String   @db.ObjectId
  Order       Order[]
}

model User {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String  @unique
  isAdmin Boolean
  Order   Order[]
}

model Exchange {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String        @unique
  rateLimit   RateLimit
  Transaction Transaction[]
}

model Currency {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  symbol String

  externalCurrencyId String @unique

  Item  Item[]
  Order Order[]
}

model Order {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  item   Item   @relation(fields: [itemId], references: [id])
  itemId String @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  quantity Int
  amount   Int

  currency   Currency @relation(fields: [currencyId], references: [id])
  currencyId String   @db.ObjectId
}

model Transaction {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  amount Int

  exchange   Exchange @relation(fields: [exchangeId], references: [id])
  exchangeId String   @db.ObjectId

  exchangeTransactionId String
  status                String
}

type RateLimit {
  daily   Int
  monthly Int
}
